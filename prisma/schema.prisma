generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model contributor {
  id           String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id      String?      @db.Uuid
  publisher_id String?      @db.Uuid
  created_at   DateTime     @default(now()) @db.Timestamp(6)
  updated_at   DateTime     @default(now()) @db.Timestamp(6)
  publisher    publisher?   @relation(fields: [publisher_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user         user?        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  literature   literature[]
}

model literature {
  id             String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title          String       @db.VarChar(255)
  author         String       @db.VarChar(255)
  content        String
  tags           String?      @db.VarChar(255)
  categories     String?      @db.VarChar(255)
  contributor_id String?      @db.Uuid
  created_at     DateTime     @default(now()) @db.Timestamp(6)
  updated_at     DateTime     @default(now()) @db.Timestamp(6)
  contributor    contributor? @relation(fields: [contributor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model publisher {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?       @db.VarChar(255)
  image       String?       @db.VarChar(255)
  name        String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  user_id     String        @db.Uuid
  tenant_id   String        @db.VarChar(255)
  contributor contributor[]
  user        user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  contributor contributor[]
  publisher   publisher[]
}
